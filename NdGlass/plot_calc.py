#coding:utf-8#!/usr/bin/env pythonfrom math import *__author__ = 'XingHua'""""""def get_data(start, end, step):    Ts1 = []    Tp1 = []    Rs22 = []    Rp22 = []    Ts3 = []    Tp3 = []    Ks1 = []    Kp1 = []    Ks1_Kp1 = []    for i in range(start, end, step):        #for i in range(0, 1):        #    i = 45.0        theta1 = i / 180.0 * pi        n_air = 1.0        n_nv = 1.5306        theta2 = asin(n_air * sin(theta1) / n_nv)        ts1 = n_nv * cos(theta2) / (n_air * cos(theta1)) * ((2 * sin(theta2) * cos(theta1) / sin(theta1 + theta2)) ** 2)        tp1 = n_nv * cos(theta2) / (n_air * cos(theta1)) * (            (2 * sin(theta2) * cos(theta1) / sin(theta1 + theta2) / cos(theta1 - theta2)) ** 2)        print("input angle is ", i)        print("ts1 = ", ts1)        print("tp1 = ", tp1)        print("\n")        Ts1.append(ts1)        Tp1.append(tp1)        n_glue = 1.5312        theta3 = pi / 2 - theta2        theta4 = asin(n_nv * sin(theta3) / n_glue)        rs21 = (sin(theta3 - theta4) / sin(theta3 + theta4)) ** 2        rp21 = (tan(theta3 - theta4) / tan(theta3 + theta4)) ** 2        print("rs21 = ", rs21)        print("rp21 = ", rp21)        print("\n")        ts21 = n_glue * cos(theta4) / (n_nv * cos(theta3)) * (            (2 * sin(theta4) * cos(theta3) / sin(theta3 + theta4)) ** 2)        tp21 = n_glue * cos(theta4) / (n_nv * cos(theta3)) * (            (2 * sin(theta4) * cos(theta3) / sin(theta3 + theta4) / cos(theta3 - theta4)) ** 2)        print("ts21 = ", ts21)        print("tp21 = ", tp21)        print("\n")        ts22 = n_nv * cos(theta3) / (n_glue * cos(theta4)) * (            (2 * sin(theta3) * cos(theta4) / sin(theta3 + theta4)) ** 2)        tp22 = n_nv * cos(theta3) / (n_glue * cos(theta4)) * (            (2 * sin(theta3) * cos(theta4) / sin(theta3 + theta4) / cos(theta3 - theta4)) ** 2)        print("ts22 = ", ts22)        print("tp22 = ", tp22)        print("\n")        n_cu = 1.5336        theta5 = theta4        theta6 = asin(n_glue / n_cu * sin(theta4))        rs22 = (sin(theta5 - theta6) / sin(theta5 + theta6)) ** 2        rp22 = (tan(theta5 - theta6) / tan(theta5 + theta6)) ** 2        print("rs22 = ", rs22)        print("rp22 = ", rp22)        print("\n")        Rs22.append(rs22)        Rp22.append(rp22)        theta7 = theta2        theta8 = theta1        ts3 = (n_air * cos(theta8)) / (n_nv * cos(theta7)) * (            (2 * sin(theta8) * cos(theta7) / sin(theta7 + theta8)) ** 2)        tp3 = (n_air * cos(theta8)) / (n_nv * cos(theta7)) * (            (2 * sin(theta8) * cos(theta7) / sin(theta7 + theta8) / cos(theta7 - theta8)) ** 2)        #print("theta7 = ", theta7)        #print("theta8 = ", theta8)        print("ts3 = ", ts3)        print("tp3 = ", tp3)        print("\n")        Ts3.append(ts3)        Tp3.append(tp3)        #print("ts21*rs22*ts22 = ", ts21*rs22*ts22)        #print("tp21*rp22*tp22 = ", tp21*rp22*tp22)        #print("\n")        Ks = ts1 * rs22 * ts3        Kp = tp1 * rp22 * tp3        Ks1.append(Ks)        Kp1.append(Kp)        Ks1_Kp1.append(Ks / Kp)        print("Ks = ", Ks)        print("Kp = ", Kp)        print("Ks/Kp = ", Ks / Kp)        print("\n")    #    return Ts1, Tp1, Ts3, Tp3, Rs22, Rp22,Ks1, Kp1    return {"Ts1": Ts1, "Tp1": Tp1, "Ts4": Ts3, "Tp4": Tp3, "Rs3": Rs22, "Rp3": Rp22, "Ks1": Ks1, "Kp1": Kp1}if __name__ == "__main__":    import matplotlib.pyplot as plt    x = range(10, 90, 5)    ax1_label = ["Ts1", "Tp1", "Ts4", "Tp4"]    ax2_label = ["Rs3", "Rp3", "Ks1", "Kp1"]    data_all = get_data(10, 90, 5)    # for key in data_all.keys():    #     print data_all[key]    fig = plt.figure()    ax1 = fig.add_subplot('211')    ax2 = fig.add_subplot('212')    for each in ax1_label:        ax1.plot(x, data_all[each], label=each)    # ax1.plot(x,data_all["Ts1"],label="Ts1")#data_all["Tp1"], data_all["Ts3"], data_all["Tp3"])    # ax1.plot(x,data_all["Tp1"],label="Tp1")    # ax1.plot(x,data_all["Ts3"],label="Ts3")    # ax1.plot(x,data_all["Tp3"],label="Tp3")    ax1.legend()    for each in ax2_label:        ax2.plot(x, data_all[each], label=each)    # ax2.plot(x,data_all["Rs22"],label="Rs22")    # ax2.plot(x,data_all["Rp22"],label="Rp22")    # ax2.plot(x,data_all["Ks1"],label="Ks")    # ax2.plot(x,data_all["Kp1"],label="Kp")    # ax2.set_ylim(-0.003,0.003)    # ax2.plot()    ax2.legend()    plt.show()